#!/bin/sh

source /etc/profile.d/modules.sh
source /etc/profile.d/modules_sw.sh

# cleanup loaded by default modules
module purge
# load explicit versions to remain consistent over time
# using the lowest compatible version of cmake to force
# upgrading the cmake_required when we add new features
module load \
  gcc/9.2.0 \
  openmpi/4.0.2 \
  cmake/3.18.2 \
  cuda/11.0.2 \
  ninja/1.10.2 \
  python/3.8.7 \
  bison/3.7.4 \
  hwloc/2.4.0 \

# Required to run with openmpi/4.0.2 on our Cauchy nodes
export OMPI_MCA_btl=openib,vader,self OMPI_MCA_btl_openib_allow_ib=1

# dplasma specific
module load \
  intel-mkl/2020.4.304 


if expr >/dev/null "${BUILDTYPE}" : "Debug"; then
    PARSEC_DEBUG_OPTIONS="--enable-debug=history,paranoid --enable-prof-trace --enable-prof-grapher"
    DPLASMA_DEBUG_OPTIONS="--enable-debug=history,paranoid --disable-precisions"
fi

if expr >/dev/null "${BUILDTYPE}" : ".*-ext"; then
    ${WORKSPACE}/parsec/configure --with-platform=saturn --prefix=${BUILDDIR}.install ${PARSEC_DEBUG_OPTIONS}
    ninja -j 24 -l 32 install || exit -1
    WITH_PARSEC="--with-parsec=${BUILDDIR}.install"
else
    DPLASMA_DEBUG_OPTIONS+=" ${PARSEC_DEBUG_OPTIONS}"
fi

CONFCMD="${WORKSPACE}/configure --with-platform=saturn --prefix=${BUILDDIR}.install ${WITH_PARSEC} ${DPLASMA_DEBUG_OPTIONS}"
echo $CONFCMD
eval $CONFCMD

# Build stage
ninja -j 24 -l 32

# Check that install works
ninja -j 24 -l 32 install

# Run the ctest
# Ctest currently disabled because of a problem with initializing Cuda on some of the nodes
# that do not have an accelerator, causing many tests to fail after a warning 'fork was used'
# The fork is issued from within `cudaGetDeviceCount`, the function fails and causes a warning.

#ctest --output-on-failure --timeout 45

