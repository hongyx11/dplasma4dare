extern "C" %{
/*
 *  Copyright (c) 2010-2020
 *
 *  The University of Tennessee and The University
 *  of Tennessee Research Foundation.  All rights
 *  reserved.
 *
 * @precisions normal z -> c d s
 *
 */
#include "dplasmajdf.h"
#include "parsec/data_dist/matrix/matrix.h"

%}

/*
 * Globals
 */
side   [type = dplasma_enum_t]
uplo   [type = dplasma_enum_t]
alpha  [type = dplasma_complex64_t]
beta   [type = dplasma_complex64_t]

descA  [type = "const parsec_tiled_matrix_t*"]
descB  [type = "const parsec_tiled_matrix_t*"]
descC  [type = "parsec_tiled_matrix_t*"]

plasma_upper   [type="dplasma_enum_t" hidden=on default=dplasmaUpper ]
plasma_lower   [type="dplasma_enum_t" hidden=on default=dplasmaLower ]
plasma_left    [type="dplasma_enum_t" hidden=on default=dplasmaLeft  ]
plasma_right   [type="dplasma_enum_t" hidden=on default=dplasmaRight ]

c [type="int" hidden=on default="( (side == dplasmaLeft) ? ((uplo == dplasmaLower) ? 0 : 1 ) : ((uplo == dplasmaLower) ? 2 : 3) )" ]

symm_in_A(m, n) [profile = off]
// Execution space
m = 0 .. descA->mt-1
n = ((uplo == plasma_upper) ? m : 0) .. ((uplo == plasma_upper) ? descA->nt-1 : m)

: descA(m, n)

  RW A <- descA(m, n)
       ->  (c == 0) || (c == 1)              ? A SYMM(m, 0..descC->nt-1, n)
       -> ((c == 0) || (c == 1)) && (m != n) ? A SYMM(n, 0..descC->nt-1, m)
       ->  (c == 2) || (c == 3)              ? B SYMM(0..descC->mt-1, n, m)
       -> ((c == 2) || (c == 3)) && (m != n) ? B SYMM(0..descC->mt-1, m, n)
BODY
{
    /* nothing */
}
END

symm_in_B(m, n) [profile = off]
// Execution space
m = 0 .. descB->mt-1
n = 0 .. descB->nt-1

: descB(m, n)

  RW B <- descB(m, n)
       -> (c == 0) || (c == 1) ? B SYMM(0..descB->mt-1, n, m)
       -> (c == 2) || (c == 3) ? A SYMM(m, 0..descB->nt-1, n)
BODY
{
    /* nothing */
}
END

SYMM(m, n, k)  [flops = inline_c %{ if( k == m ) return FLOPS_ZSYMM(side, CLEAN_MB(descC, m), CLEAN_NB(descC, n));
                                    else return FLOPS_ZGEMM(CLEAN_MB(descC, m), CLEAN_NB(descC, n), ( side == PlasmaLeft ? CLEAN_MB(descC, k) : CLEAN_NB(descC, k) )); %} ]

// Execution space
m = 0 .. descC->mt-1
n = 0 .. descC->nt-1
k = 0 .. (side == plasma_left ) ? descC->mt-1 : descC->nt-1

// Parallel partitioning
: descC(m, n)

// Parameters

READ  A <- (c == 0) && (k <= m) ? A symm_in_A(m, k)
        <- (c == 0) && (k >  m) ? A symm_in_A(k, m)
        <- (c == 1) && (k <= m) ? A symm_in_A(k, m)
        <- (c == 1) && (k >  m) ? A symm_in_A(m, k)
        <- (c == 2) || (c == 3) ? B symm_in_B(m, k)
READ  B <- (c == 2) && (k <= n) ? A symm_in_A(n, k)
        <- (c == 2) && (k >  n) ? A symm_in_A(k, n)
        <- (c == 3) && (k <= n) ? A symm_in_A(k, n)
        <- (c == 3) && (k >  n) ? A symm_in_A(n, k)
        <- (c == 0) || (c == 1) ? B symm_in_B(k, n)
RW    C <- ( k == 0 ) ? descC(m, n) : C SYMM( m, n, k-1 )
        -> ( ( (side == plasma_left) && (k == descC->mt-1) ) || ( (side == plasma_right) && (k == descC->nt-1) ) ) ? descC( m, n ) : C SYMM(m, n, k+1)
BODY
{
    dplasma_complex64_t zbeta = (k == 0) ? beta : (dplasma_complex64_t)1.0;
    int tempmm = ( m == descC->mt-1 ) ? descC->m - m * descC->mb : descC->mb;
    int tempnn = ( n == descC->nt-1 ) ? descC->n - n * descC->nb : descC->nb;
    int ldcm   = BLKLDD( descC, m );

    if (side == dplasmaLeft && k == m) {
        int ldam = BLKLDD( descA, m );
        int ldbk = BLKLDD( descB, k );

        CORE_zsymm(
            side, uplo,
            tempmm, tempnn,
            alpha, A, ldam,
            B, ldbk,
            zbeta, C, ldcm);
    }
    else if (side == dplasmaRight && k == n) {
        int ldak = BLKLDD( descA, k );
        int ldbm = BLKLDD( descB, m );

        CORE_zsymm(
            side, uplo,
            tempmm, tempnn,
            alpha, B, ldak,
            A, ldbm,
            zbeta, C, ldcm);
    } else {
        dplasma_enum_t transl = (c == 0 && k > m) || (c == 1 && k < m) ? dplasmaTrans : dplasmaNoTrans;
        dplasma_enum_t transr = (c == 3 && k > n) || (c == 2 && k < n) ? dplasmaTrans : dplasmaNoTrans;
        int tempk = (side == dplasmaLeft) ? (( k == descC->mt-1 ) ? descC->m - k * descC->mb : descC->mb)
        :                              (( k == descC->nt-1 ) ? descC->n - k * descC->nb : descC->nb);

        int lda = (side == dplasmaRight) ? BLKLDD(descB, m)
        : ((c == 0 && k > m) || (c == 1 && k < m) ? BLKLDD(descA, k) : BLKLDD(descA, m) );
        int ldb = (side == dplasmaLeft) ? BLKLDD(descB, k)
        : ((c == 3 && k > n) || (c == 2 && k < n) ? BLKLDD(descA, n) : BLKLDD(descA, k) );

        CORE_zgemm(
            transl, transr,
            tempmm, tempnn, tempk,
            alpha, A, lda,
            B, ldb,
            zbeta, C, ldcm); /* ldc * Y */
    }

    printlog("symm( %d, %d, %d )\n", m, n, k);
}
END
